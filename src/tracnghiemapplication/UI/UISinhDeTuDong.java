/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tracnghiemapplication.UI;

import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BoxLayout;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import org.apache.poi.xwpf.usermodel.ParagraphAlignment;
import org.apache.poi.xwpf.usermodel.XWPFDocument;
import org.apache.poi.xwpf.usermodel.XWPFParagraph;
import org.apache.poi.xwpf.usermodel.XWPFRun;
import tracnghiemapplication.ClassesHandle.CauHoi;
import tracnghiemapplication.ClassesHandle.CauHoiTracNghiem;
import tracnghiemapplication.ClassesHandle.CauHoiTuLuan;
import tracnghiemapplication.ClassesHandle.DeThi;
import tracnghiemapplication.ClassesHandle.FileObject;
import tracnghiemapplication.ClassesHandle.MonHoc;

/**
 *
 * @author SON
 */
public class UISinhDeTuDong extends javax.swing.JFrame {
    private MonHoc monHoc;
    private DeThi tmpDeThi;
    private static int number = 0;
    private boolean trangThaiLuu = false;
    public String tenDeThi;
    /**
     * Creates new form UISinhDeTuDong
     */
    public UISinhDeTuDong() {
        initComponents();
    }
    
    public void setMonHoc(MonHoc monHoc) {
        this.monHoc = monHoc;
    }
    
    public void setTrangThaiLuu(boolean trangThaiLuu) {
        this.trangThaiLuu = trangThaiLuu;
    }
    
    public void setTenDeThi(String tenDeThi) {
        this.tenDeThi = tenDeThi;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jRBTracNghiem = new javax.swing.JRadioButton();
        jRBTuLuan = new javax.swing.JRadioButton();
        JRBCaTracNgiemVaTuLuan = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jRBChung = new javax.swing.JRadioButton();
        jRBRieng = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jSSoCau = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        jCBDoKho = new javax.swing.JComboBox<>();
        jCBoxSoLuongCauMoiChuong = new javax.swing.JCheckBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        jPanelChonSoCau = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jLCauHoiTrongDe = new javax.swing.JList<>(new DefaultListModel<String>());
        jLBThayTheCauHoi = new javax.swing.JLabel();
        jLBXoaCauHoi = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLBXemTruoc = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTAXemTruoc = new javax.swing.JTextArea();
        jLBXuatFile = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jTFThoiGian = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jTFNamHoc = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jRBKyI = new javax.swing.JRadioButton();
        jRBKyII = new javax.swing.JRadioButton();
        jRBKyHe = new javax.swing.JRadioButton();
        btnXoaDeThi = new javax.swing.JButton();
        btnLuuDeThi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Sinh Đề Tự Động");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Dạng đề thi");

        jRBTracNghiem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jRBTracNghiem.setText("Trắc nghiêm");

        jRBTuLuan.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jRBTuLuan.setText("Tự luận");

        JRBCaTracNgiemVaTuLuan.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        JRBCaTracNgiemVaTuLuan.setText("Cả trắc nghiệm và tự luận");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRBTracNghiem, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRBTuLuan, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JRBCaTracNgiemVaTuLuan)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jRBTracNghiem, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jRBTuLuan, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(JRBCaTracNgiemVaTuLuan, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Hình thức");

        jRBChung.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jRBChung.setText("Phần trắc nghiệm và tự luân chung");
        jRBChung.setEnabled(false);

        jRBRieng.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jRBRieng.setText("Trắc nghiệm riêng và tự luân riêng");
        jRBRieng.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRBChung)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRBRieng)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jRBChung, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jRBRieng, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Số câu");

        jSSoCau.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Độ khó");

        jCBoxSoLuongCauMoiChuong.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jCBoxSoLuongCauMoiChuong.setText("Số lượng câu hỏi mỗi chương");
        jCBoxSoLuongCauMoiChuong.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBoxSoLuongCauMoiChuongItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanelChonSoCauLayout = new javax.swing.GroupLayout(jPanelChonSoCau);
        jPanelChonSoCau.setLayout(jPanelChonSoCauLayout);
        jPanelChonSoCauLayout.setHorizontalGroup(
            jPanelChonSoCauLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 354, Short.MAX_VALUE)
        );
        jPanelChonSoCauLayout.setVerticalGroup(
            jPanelChonSoCauLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jScrollPane3.setViewportView(jPanelChonSoCau);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSSoCau)
                    .addComponent(jCBDoKho, 0, 74, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addComponent(jCBoxSoLuongCauMoiChuong)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jSSoCau, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                                .addComponent(jCBoxSoLuongCauMoiChuong, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jCBDoKho, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setText("Tạo Đề Thi");
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(270, 270, 270)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
        );

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Danh sách câu hỏi");

        jLCauHoiTrongDe.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jScrollPane1.setViewportView(jLCauHoiTrongDe);

        jLBThayTheCauHoi.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLBThayTheCauHoi.setForeground(new java.awt.Color(51, 51, 255));
        jLBThayTheCauHoi.setText("<html><u>Thay thế bằng câu hỏi khác</u></html>");
        jLBThayTheCauHoi.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLBThayTheCauHoi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLBThayTheCauHoiMouseClicked(evt);
            }
        });

        jLBXoaCauHoi.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLBXoaCauHoi.setForeground(new java.awt.Color(255, 0, 51));
        jLBXoaCauHoi.setText("<html><u>Xóa câu hỏi</u></html>");
        jLBXoaCauHoi.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLBXoaCauHoi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLBXoaCauHoiMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLBThayTheCauHoi, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLBXoaCauHoi, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLBThayTheCauHoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLBXoaCauHoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLBXemTruoc.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLBXemTruoc.setText("Xem Trước");
        jLBXemTruoc.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLBXemTruoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLBXemTruocMouseClicked(evt);
            }
        });

        jTAXemTruoc.setColumns(20);
        jTAXemTruoc.setRows(5);
        jScrollPane2.setViewportView(jTAXemTruoc);

        jLBXuatFile.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLBXuatFile.setForeground(new java.awt.Color(0, 51, 255));
        jLBXuatFile.setText("<html><u>Xuất ra file</u></html>");
        jLBXuatFile.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLBXuatFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLBXuatFileMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLBXemTruoc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLBXuatFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jLBXemTruoc, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLBXuatFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13))
        );

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("Thông tin đề thi");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Thời gian");

        jTFThoiGian.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Phút");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("Năm học");

        jTFNamHoc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("Kỳ");

        jRBKyI.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jRBKyI.setText("Kỳ I");

        jRBKyII.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jRBKyII.setText("Kỳ II");

        jRBKyHe.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jRBKyHe.setText("Kỳ hè");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jLabel11)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addComponent(jTFThoiGian, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel13))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(18, 18, 18)
                        .addComponent(jTFNamHoc))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jRBKyI)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRBKyII)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRBKyHe)))
                .addContainerGap(84, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jTFThoiGian, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel14))
                    .addComponent(jTFNamHoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jRBKyI)
                    .addComponent(jRBKyII)
                    .addComponent(jRBKyHe)))
        );

        btnXoaDeThi.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnXoaDeThi.setText("Xóa đề thi");
        btnXoaDeThi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaDeThiActionPerformed(evt);
            }
        });

        btnLuuDeThi.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnLuuDeThi.setText("Lưu đề thi");
        btnLuuDeThi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuDeThiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnLuuDeThi)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnXoaDeThi)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnLuuDeThi, btnXoaDeThi});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLuuDeThi, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXoaDeThi, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnLuuDeThi, btnXoaDeThi});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        int doKhoMax = 0;
        if(trangThaiLuu) {
            tmpDeThi = new DeThi();
            UINhapTenDeThi nhapTenDeThi = new UINhapTenDeThi();
            nhapTenDeThi.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            nhapTenDeThi.setVisible(true);
            nhapTenDeThi.getJButtonOK().addActionListener((ActionEvent e) -> {
                tenDeThi = nhapTenDeThi.jTFTenDeThi.getText();
                nhapTenDeThi.dispose();
            });
            for(CauHoi cauHoi : monHoc.getDSCauHoi()) {
                if(cauHoi.getDoKho() >= doKhoMax) {
                    doKhoMax = cauHoi.getDoKho();
                }
            }
            for(int i = 1; i <= doKhoMax; i++) {
                jCBDoKho.addItem(String.valueOf(i));
            }
            jCBDoKho.addItem("Bất Kỳ");
        }
    }//GEN-LAST:event_formWindowOpened

    private void jCBoxSoLuongCauMoiChuongItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCBoxSoLuongCauMoiChuongItemStateChanged
        // TODO add your handling code here:
        if(jCBoxSoLuongCauMoiChuong.isSelected()) {
            jPanelChonSoCau.setLayout(new BoxLayout(jPanelChonSoCau, BoxLayout.Y_AXIS));
            for(int i = 1; i <= monHoc.getSoChuong(); i++) {
                SubPanel1 subPanel = new SubPanel1();
                subPanel.setJLabel("Chương " + i);
                jPanelChonSoCau.add(subPanel);
                jPanelChonSoCau.validate();
                jPanelChonSoCau.repaint();
            } 
        }
    }//GEN-LAST:event_jCBoxSoLuongCauMoiChuongItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        ((DefaultListModel)jLCauHoiTrongDe.getModel()).removeAllElements();
        int cout = 1;
        ArrayList<CauHoi> dsCauHoi = new ArrayList<>();
        int soCauTrongDe = (int)jSSoCau.getValue();
        int tongSoCau = monHoc.getDSCauHoi().size();
        dsCauHoi.addAll(monHoc.getDSCauHoi());
        Component[] subComponent = jPanelChonSoCau.getComponents();
        Random rd = new Random();
        
        if(jCBoxSoLuongCauMoiChuong.isSelected()) {
            int soCauChon = 0;
            for (Component subComponent1 : subComponent) {
                soCauChon += ((SubPanel1) subComponent1).getSoCauCuaChuong();
            }
            if(soCauChon != soCauTrongDe) {
                JOptionPane.showMessageDialog(null, "Số câu trọn trong các chương không bằng tổng số câu trong đề", "Thông báo lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        if(jRBTracNghiem.isSelected() && soCauTrongDe > 0) {
            if(jCBoxSoLuongCauMoiChuong.isSelected()) {
                if(String.valueOf(jCBDoKho.getSelectedItem()).equals("Bất Kỳ")) {
                    int cau = 1;
                    for (Component subComponent1 : subComponent) {
                        SubPanel1 tmpSub = (SubPanel1) subComponent1;
                        if(tmpSub.getSoCauCuaChuong() > 0) {
                            String part[] = (tmpSub.getJLabel()).split(" ");
                            int chuong = Integer.parseInt(part[1]);
                            int soCauCuaChuong = tmpSub.getSoCauCuaChuong();
                            int ct = 1;
                            while(ct <= soCauCuaChuong) {
                                int random = rd.nextInt(tongSoCau) + 0;
                                CauHoi tmpCauHoi = (CauHoi)dsCauHoi.get(random);
                                if((tmpCauHoi instanceof CauHoiTracNghiem) && (tmpCauHoi.getSoChuong() == chuong)) {
                                    tmpDeThi.themCauHoi(tmpCauHoi);
                                    ((DefaultListModel)jLCauHoiTrongDe.getModel()).addElement("Câu " + cau + ": " + tmpCauHoi.getCauHoi());
                                    ct++;
                                    cau++;
                                }
                            }
                        }
                    }
                }
                else {
                    int cau = 1;
                    int doKhoCau = Integer.parseInt(String.valueOf(jCBDoKho.getSelectedItem()));
                    for (Component subComponent1 : subComponent) {
                        SubPanel1 tmpSub = (SubPanel1) subComponent1;
                        if(tmpSub.getSoCauCuaChuong() > 0) {
                            String part[] = (tmpSub.getJLabel()).split(" ");
                            int chuong = Integer.parseInt(part[1]);
                            int soCauCuaChuong = tmpSub.getSoCauCuaChuong();
                            int ct = 1;
                            while(ct <= soCauCuaChuong) {
                                int random = rd.nextInt(tongSoCau) + 0;
                                CauHoi tmpCauHoi = (CauHoi)dsCauHoi.get(random);
                                if((tmpCauHoi instanceof CauHoiTracNghiem) && (tmpCauHoi.getSoChuong() == chuong) && (tmpCauHoi.getDoKho() == doKhoCau)) {
                                    tmpDeThi.themCauHoi(tmpCauHoi);
                                    ((DefaultListModel)jLCauHoiTrongDe.getModel()).addElement("Câu " + cau + ": " + tmpCauHoi.getCauHoi());
                                    ct++;
                                    cau++;
                                }
                            }
                        }
                    }
                }
            }
            else {
                if(String.valueOf(jCBDoKho.getSelectedItem()).equals("Bất Kỳ")) {
                    while(cout <= soCauTrongDe) {
                        int random = rd.nextInt(tongSoCau) + 0;
                        CauHoi tmpCauHoi = (CauHoi)dsCauHoi.get(random);
                        if(tmpCauHoi instanceof CauHoiTracNghiem) {
                            tmpDeThi.themCauHoi(tmpCauHoi);
                            ((DefaultListModel)jLCauHoiTrongDe.getModel()).addElement("Câu " + cout + ": " + tmpCauHoi.getCauHoi());
                            cout++;
                        }
                    }
                }
                else {
                    int doKhoCau = Integer.parseInt(String.valueOf(jCBDoKho.getSelectedItem()));
                    for(CauHoi cauHoi : dsCauHoi) {
                        if(cout > tongSoCau) {
                            break;
                        }
                        if((cauHoi instanceof CauHoiTracNghiem) && (cauHoi.getDoKho() == doKhoCau)) {
                            tmpDeThi.themCauHoi(cauHoi);
                            ((DefaultListModel)jLCauHoiTrongDe.getModel()).addElement("Câu " + cout + ": " + cauHoi.getCauHoi());
                            cout++;
                        }
                    }
                }
            }
        }
        
        if(jRBTuLuan.isSelected() && soCauTrongDe > 0) {
            if(jCBoxSoLuongCauMoiChuong.isSelected()) {
                if(String.valueOf(jCBDoKho.getSelectedItem()).equals("Bất Kỳ")) {
                    int cau = 1;
                    for (Component subComponent1 : subComponent) {
                        SubPanel1 tmpSub = (SubPanel1) subComponent1;
                        if(tmpSub.getSoCauCuaChuong() > 0) {
                            String part[] = (tmpSub.getJLabel()).split(" ");
                            int chuong = Integer.parseInt(part[1]);
                            int soCauCuaChuong = tmpSub.getSoCauCuaChuong();
                            int ct = 1;
                            while(ct <= soCauCuaChuong) {
                                int random = rd.nextInt(tongSoCau) + 0;
                                CauHoi tmpCauHoi = (CauHoi)dsCauHoi.get(random);
                                if((tmpCauHoi instanceof CauHoiTuLuan) && (tmpCauHoi.getSoChuong() == chuong)) {
                                    tmpDeThi.themCauHoi(tmpCauHoi);
                                    ((DefaultListModel)jLCauHoiTrongDe.getModel()).addElement("Câu " + cau + ": " + tmpCauHoi.getCauHoi());
                                    ct++;
                                    cau++;
                                }
                            }
                        }
                    }
                }
                else {
                    int cau = 1;
                    int doKhoCau = Integer.parseInt(String.valueOf(jCBDoKho.getSelectedItem()));
                    for (Component subComponent1 : subComponent) {
                        SubPanel1 tmpSub = (SubPanel1) subComponent1;
                        if(tmpSub.getSoCauCuaChuong() > 0) {
                            String part[] = (tmpSub.getJLabel()).split(" ");
                            int chuong = Integer.parseInt(part[1]);
                            int soCauCuaChuong = tmpSub.getSoCauCuaChuong();
                            int ct = 1;
                            while(ct <= soCauCuaChuong) {
                                int random = rd.nextInt(tongSoCau) + 0;
                                CauHoi tmpCauHoi = (CauHoi)dsCauHoi.get(random);
                                if((tmpCauHoi instanceof CauHoiTuLuan) && (tmpCauHoi.getSoChuong() == chuong) && (tmpCauHoi.getDoKho() == doKhoCau)) {
                                    tmpDeThi.themCauHoi(tmpCauHoi);
                                    ((DefaultListModel)jLCauHoiTrongDe.getModel()).addElement("Câu " + cau + ": " + tmpCauHoi.getCauHoi());
                                    ct++;
                                    cau++;
                                }
                            }
                        }
                    }
                }
            }
            else {
                if(String.valueOf(jCBDoKho.getSelectedItem()).equals("Bất Kỳ")) {
                    while(cout <= soCauTrongDe) {
                        int random = rd.nextInt(tongSoCau) + 0;
                        CauHoi tmpCauHoi = (CauHoi)dsCauHoi.get(random);
                        if(tmpCauHoi instanceof CauHoiTuLuan) {
                            tmpDeThi.themCauHoi(tmpCauHoi);
                            ((DefaultListModel)jLCauHoiTrongDe.getModel()).addElement("Câu " + cout + ": " + tmpCauHoi.getCauHoi());
                            cout++;
                        }
                    }
                }
                else {
                    int doKhoCau = Integer.parseInt(String.valueOf(jCBDoKho.getSelectedItem()));
                    for(CauHoi cauHoi : dsCauHoi) {
                        if(cout > tongSoCau) {
                            break;
                        }
                        if((cauHoi instanceof CauHoiTuLuan) && (cauHoi.getDoKho() == doKhoCau)) {
                            tmpDeThi.themCauHoi(cauHoi);
                            ((DefaultListModel)jLCauHoiTrongDe.getModel()).addElement("Câu " + cout + ": " + cauHoi.getCauHoi());
                            cout++;
                        }
                    }
                }
            }
        }
        
        if(JRBCaTracNgiemVaTuLuan.isSelected() && soCauTrongDe > 0)  {
            jRBChung.setEnabled(true);
            jRBRieng.setEnabled(true);
            if(jRBChung.isSelected()) {
                if(jCBoxSoLuongCauMoiChuong.isSelected()) {
                    if(String.valueOf(jCBDoKho.getSelectedItem()).equals("Bất Kỳ")) {
                        int cau = 1;
                        for (Component subComponent1 : subComponent) {
                            SubPanel1 tmpSub = (SubPanel1) subComponent1;
                            if(tmpSub.getSoCauCuaChuong() > 0) {
                                String part[] = (tmpSub.getJLabel()).split(" ");
                                int chuong = Integer.parseInt(part[1]);
                                int soCauCuaChuong = tmpSub.getSoCauCuaChuong();
                                int ct = 1;
                                while(ct <= soCauCuaChuong) {
                                    int random = rd.nextInt(tongSoCau) + 0;
                                    CauHoi tmpCauHoi = (CauHoi)dsCauHoi.get(random);
                                    if(tmpCauHoi.getSoChuong() == chuong) {
                                        tmpDeThi.themCauHoi(tmpCauHoi);
                                        ((DefaultListModel)jLCauHoiTrongDe.getModel()).addElement("Câu " + cau + ": " + tmpCauHoi.getCauHoi());
                                        ct++;
                                        cau++;
                                    }
                                }
                            }
                        }
                    }
                    else {
                        int cau = 1;
                        int doKhoCau = Integer.parseInt(String.valueOf(jCBDoKho.getSelectedItem()));
                        for (Component subComponent1 : subComponent) {
                            SubPanel1 tmpSub = (SubPanel1) subComponent1;
                            if(tmpSub.getSoCauCuaChuong() > 0) {
                                String part[] = (tmpSub.getJLabel()).split(" ");
                                int chuong = Integer.parseInt(part[1]);
                                int soCauCuaChuong = tmpSub.getSoCauCuaChuong();
                                int ct = 1;
                                while(ct <= soCauCuaChuong) {
                                    int random = rd.nextInt(tongSoCau) + 0;
                                    CauHoi tmpCauHoi = (CauHoi)dsCauHoi.get(random);
                                    if((tmpCauHoi.getSoChuong() == chuong) && (tmpCauHoi.getDoKho() == doKhoCau)) {
                                        tmpDeThi.themCauHoi(tmpCauHoi);
                                        ((DefaultListModel)jLCauHoiTrongDe.getModel()).addElement("Câu " + cau + ": " + tmpCauHoi.getCauHoi());
                                        ct++;
                                        cau++;
                                    }
                                }
                            }
                        }
                    }
                }
                else {
                    if(String.valueOf(jCBDoKho.getSelectedItem()).equals("Bất Kỳ")) {
                        while(cout <= soCauTrongDe) {
                            int random = rd.nextInt(tongSoCau) + 0;
                            CauHoi tmpCauHoi = (CauHoi)dsCauHoi.get(random);
                            tmpDeThi.themCauHoi(tmpCauHoi);
                            ((DefaultListModel)jLCauHoiTrongDe.getModel()).addElement("Câu " + cout + ": " + tmpCauHoi.getCauHoi());
                            cout++;
                        }
                    }
                    else {
                        int doKhoCau = Integer.parseInt(String.valueOf(jCBDoKho.getSelectedItem()));
                        for(CauHoi cauHoi : dsCauHoi) {
                            if(cout > tongSoCau) {
                                break;
                            }
                            if(cauHoi.getDoKho() == doKhoCau) {
                                tmpDeThi.themCauHoi(cauHoi);
                                ((DefaultListModel)jLCauHoiTrongDe.getModel()).addElement("Câu " + cout + ": " + cauHoi.getCauHoi());
                                cout++;
                            }
                        }
                    }
                }
            }
            
            if(jRBRieng.isSelected()) {
                if(jCBoxSoLuongCauMoiChuong.isSelected()) {
                    if(String.valueOf(jCBDoKho.getSelectedItem()).equals("Bất Kỳ")) {
                        int cau = 1;
                        int soCauTracNghiem = (int) soCauTrongDe/2;
                        for (Component subComponent1 : subComponent) {
                            SubPanel1 tmpSub = (SubPanel1) subComponent1;
                            if(tmpSub.getSoCauCuaChuong() > 0) {
                                String part[] = (tmpSub.getJLabel()).split(" ");
                                int chuong = Integer.parseInt(part[1]);
                                int soCauCuaChuong = tmpSub.getSoCauCuaChuong();
                                int ct = 1;
                                while(ct <= soCauCuaChuong && cau <= soCauTracNghiem) {
                                    int random = rd.nextInt(tongSoCau) + 0;
                                    CauHoi tmpCauHoi = (CauHoi)dsCauHoi.get(random);
                                    if((tmpCauHoi instanceof CauHoiTracNghiem) && tmpCauHoi.getSoChuong() == chuong) {
                                        tmpDeThi.themCauHoi(tmpCauHoi);
                                        ((DefaultListModel)jLCauHoiTrongDe.getModel()).addElement("Câu " + cau + ": " + tmpCauHoi.getCauHoi());
                                        ct++;
                                        cau++;
                                    }
                                }
                                ct = 1;
                                while(ct <= soCauCuaChuong && cau <= soCauTrongDe) {
                                    int random = rd.nextInt(tongSoCau) + 0;
                                    CauHoi tmpCauHoi = (CauHoi)dsCauHoi.get(random);
                                    if((tmpCauHoi instanceof CauHoiTuLuan) && tmpCauHoi.getSoChuong() == chuong) {
                                        tmpDeThi.themCauHoi(tmpCauHoi);
                                        ((DefaultListModel)jLCauHoiTrongDe.getModel()).addElement("Câu " + cau + ": " + tmpCauHoi.getCauHoi());
                                        ct++;
                                        cau++;
                                    }
                                }
                            }
                        }
                    }
                    else {
                        int cau = 1;
                        int doKhoCau = Integer.parseInt(String.valueOf(jCBDoKho.getSelectedItem()));
                        int soCauTracNghiem = (int) soCauTrongDe/2;
                        for (Component subComponent1 : subComponent) {
                            SubPanel1 tmpSub = (SubPanel1) subComponent1;
                            if(tmpSub.getSoCauCuaChuong() > 0) {
                                String part[] = (tmpSub.getJLabel()).split(" ");
                                int chuong = Integer.parseInt(part[1]);
                                int soCauCuaChuong = tmpSub.getSoCauCuaChuong();
                                int ct = 1;
                                while(ct <= soCauCuaChuong && cau <= soCauTracNghiem) {
                                    int random = rd.nextInt(tongSoCau) + 0;
                                    CauHoi tmpCauHoi = (CauHoi)dsCauHoi.get(random);
                                    if((tmpCauHoi instanceof CauHoiTracNghiem) && (tmpCauHoi.getSoChuong() == chuong) && (tmpCauHoi.getDoKho() == doKhoCau)) {
                                        tmpDeThi.themCauHoi(tmpCauHoi);
                                        ((DefaultListModel)jLCauHoiTrongDe.getModel()).addElement("Câu " + cau + ": " + tmpCauHoi.getCauHoi());
                                        ct++;
                                        cau++;
                                    }
                                }
                                ct = 1;
                                while(ct <= soCauCuaChuong && cau <= soCauTrongDe) {
                                    int random = rd.nextInt(tongSoCau) + 0;
                                    CauHoi tmpCauHoi = (CauHoi)dsCauHoi.get(random);
                                    if((tmpCauHoi instanceof CauHoiTuLuan) && (tmpCauHoi.getSoChuong() == chuong) && (tmpCauHoi.getDoKho() == doKhoCau)) {
                                        tmpDeThi.themCauHoi(tmpCauHoi);
                                        ((DefaultListModel)jLCauHoiTrongDe.getModel()).addElement("Câu " + cau + ": " + tmpCauHoi.getCauHoi());
                                        ct++;
                                        cau++;
                                    }
                                }
                            }
                        }
                    }
                }
                else {
                    if(String.valueOf(jCBDoKho.getSelectedItem()).equals("Bất Kỳ")) {
                        int soCauHoiTrawNghiem = (int) soCauTrongDe/2;
                        while(cout <= soCauHoiTrawNghiem) {
                            int random = rd.nextInt(tongSoCau) + 0;
                            CauHoi tmpCauHoi = (CauHoi)dsCauHoi.get(random);
                            if(tmpCauHoi instanceof CauHoiTracNghiem) {
                                tmpDeThi.themCauHoi(tmpCauHoi);
                                ((DefaultListModel)jLCauHoiTrongDe.getModel()).addElement("Câu " + cout + ": " + tmpCauHoi.getCauHoi());
                                cout++;
                            }
                        }
                        while(cout <= soCauTrongDe) {
                            int random = rd.nextInt(tongSoCau) + 0;
                            CauHoi tmpCauHoi = (CauHoi)dsCauHoi.get(random);
                            if(tmpCauHoi instanceof CauHoiTuLuan) {
                                tmpDeThi.themCauHoi(tmpCauHoi);
                                ((DefaultListModel)jLCauHoiTrongDe.getModel()).addElement("Câu " + cout + ": " + tmpCauHoi.getCauHoi());
                                cout++;
                            }
                        }
                    }
                    else {
                        int doKhoCau = Integer.parseInt(String.valueOf(jCBDoKho.getSelectedItem()));
                        int soCauHoiTrawNghiem = (int) soCauTrongDe/2;
                        for(CauHoi cauHoi : dsCauHoi) {
                            if(cout > soCauHoiTrawNghiem) {
                                break;
                            }
                            if(cauHoi.getDoKho() == doKhoCau && cauHoi instanceof CauHoiTracNghiem) {
                                tmpDeThi.themCauHoi(cauHoi);
                                ((DefaultListModel)jLCauHoiTrongDe.getModel()).addElement("Câu " + cout + ": " + cauHoi.getCauHoi());
                                cout++;
                            }
                        }
                        for(CauHoi cauHoi : dsCauHoi) {
                            if(cout > soCauTrongDe) {
                                break;
                            }
                            if(cauHoi.getDoKho() == doKhoCau && cauHoi instanceof CauHoiTuLuan) {
                                tmpDeThi.themCauHoi(cauHoi);
                                ((DefaultListModel)jLCauHoiTrongDe.getModel()).addElement("Câu " + cout + ": " + cauHoi.getCauHoi());
                                cout++;
                            }
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jLBThayTheCauHoiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBThayTheCauHoiMouseClicked
        // TODO add your handling code here:
        UIChonCauHoiThayThe chonCauHoiThayThe = new UIChonCauHoiThayThe();
        chonCauHoiThayThe.setMonHoc(monHoc);
        chonCauHoiThayThe.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        chonCauHoiThayThe.setVisible(true);
        chonCauHoiThayThe.getJButton().addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String itemSelected = (String) chonCauHoiThayThe.getJLDSCauHoi().getSelectedValue();
                for(CauHoi cauHoi : tmpDeThi.getDSCauHoi()) {
                    if(cauHoi.getCauHoi().equals(itemSelected)) {
                        JOptionPane.showMessageDialog(null, "Câu hỏi này đã có trong đề thi", "Thông báo lỗi", JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                }
                int index = jLCauHoiTrongDe.getSelectedIndex();
                ((DefaultListModel)jLCauHoiTrongDe.getModel()).removeElementAt(index);
                ((DefaultListModel)jLCauHoiTrongDe.getModel()).add(index, itemSelected);
                chonCauHoiThayThe.dispose();
            }
        });
    }//GEN-LAST:event_jLBThayTheCauHoiMouseClicked

    private void jLBXoaCauHoiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBXoaCauHoiMouseClicked
        // TODO add your handling code here:
        String itemSelected = jLCauHoiTrongDe.getSelectedValue();
        String subItemSelected = itemSelected.substring(7, itemSelected.length());
        for(CauHoi cauHoi : tmpDeThi.getDSCauHoi()) {
            if(cauHoi.getCauHoi().equals(subItemSelected)) {
                ((DefaultListModel)jLCauHoiTrongDe.getModel()).removeElementAt(tmpDeThi.getDSCauHoi().indexOf(cauHoi));
                tmpDeThi.getDSCauHoi().remove(cauHoi);
                break;
            }
        }
    }//GEN-LAST:event_jLBXoaCauHoiMouseClicked

    private void btnLuuDeThiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuDeThiActionPerformed
        // TODO add your handling code here:
        if(!(jTFNamHoc.getText().isEmpty()) && !(jTFThoiGian.getText().isEmpty()) && ((DefaultListModel)jLCauHoiTrongDe.getModel()).size() > 0) {
            FileObject fileObject = new FileObject();
            tmpDeThi.setTenDeThi(tenDeThi);
            tmpDeThi.setLoaiDeThi(jRBKyI.isSelected() ? "kỳ 1" : jRBKyII.isSelected() ? "kỳ 2" : "kỳ hè");
            tmpDeThi.setThoiGian(jTFThoiGian.getText());
            tmpDeThi.setNamHoc(jTFNamHoc.getText());
            if(trangThaiLuu) {
                monHoc.themDeThi(tmpDeThi);
            }
            fileObject.updateObjectInFile("MonHoc.txt", monHoc);
            trangThaiLuu = false;
            UIQuanLyDeThi.isFocus = true;
        }
    }//GEN-LAST:event_btnLuuDeThiActionPerformed

    private void btnXoaDeThiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaDeThiActionPerformed
        // TODO add your handling code here:
        if(!trangThaiLuu) {
            FileObject fileObject = new FileObject();
            monHoc.xoaDeThi(tmpDeThi);
            fileObject.updateObjectInFile("MonHoc.txt", monHoc);
            UIQuanLyDeThi.isFocus = true;
            this.dispose();
        }
    }//GEN-LAST:event_btnXoaDeThiActionPerformed

    private void jLBXemTruocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBXemTruocMouseClicked
        // TODO add your handling code here:
        jTAXemTruoc.setText(null);
        double tongDiem = 0;
        jTAXemTruoc.append("BÀI THI MÔN " + monHoc.getTenMonHoc().toUpperCase() + "\n");
        jTAXemTruoc.append((jRBKyI.isSelected() ? "Kỳ 1" : jRBKyII.isSelected() ? "Kỳ 2" : "Kỳ hè") + " - " + jTFNamHoc.getText() + "\n");
        jTAXemTruoc.append("Thời gian : " + jTFThoiGian.getText() + " phút" + "\n");
        jTAXemTruoc.append("\n\n");
        for(CauHoi cauHoi : tmpDeThi.getDSCauHoi()) {
            tongDiem += cauHoi.getDiemDatDuoc();
            jTAXemTruoc.append("Câu " + String.valueOf(tmpDeThi.getDSCauHoi().indexOf(cauHoi) + 1) + " (" + cauHoi.getDiemDatDuoc() + " điểm)\n");
            cauHoi.inCauHoi(jTAXemTruoc);
            jTAXemTruoc.append("\n");
        }
        jTAXemTruoc.append("\nTổng điểm: " + tongDiem + "\n");
    }//GEN-LAST:event_jLBXemTruocMouseClicked

    private void jLBXuatFileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLBXuatFileMouseClicked
        // TODO add your handling code here:
        FileOutputStream fos = null;
        String[] dsDapAn = {"A", "B", "C", "D", "E", "F", "G", "H"};
        try {
            jTAXemTruoc.setText(null);
            jLBXemTruocMouseClicked(evt);
            ArrayList<String> contentPage = new ArrayList<>();
            contentPage.addAll(Arrays.asList(jTAXemTruoc.getText().split("\\n")));
            //Khoi tao doi tuong sinh file word
            XWPFDocument document = new XWPFDocument();
            //Tao tieu de bai viet
            XWPFParagraph titleGraph = document.createParagraph();
            titleGraph.setAlignment(ParagraphAlignment.CENTER);
            XWPFRun titleRun = titleGraph.createRun();
            titleRun.setFontFamily("Times New Roman");
            titleRun.setBold(true);
            titleRun.setFontSize(18);
            titleRun.setText("BÀI THI MÔN " + monHoc.getTenMonHoc().toUpperCase());
            titleRun.addBreak();
            titleRun.setFontSize(14);
            titleRun.setItalic(true);
            titleRun.setText((jRBKyI.isSelected() ? "Kỳ 1" : jRBKyII.isSelected() ? "Kỳ 2" : "Kỳ hè") + " - " + jTFNamHoc.getText());
            titleRun.addBreak();
            titleRun.setText("Thời gian : " + jTFThoiGian.getText() + " phút");
            
            //Tao khoang cach giua tieu de va noi dung
            XWPFParagraph paraBreak1 = document.createParagraph();
            XWPFRun runBreak1 = paraBreak1.createRun();
            runBreak1.addBreak();
            
            //Noi dung
            XWPFParagraph contentGraph = document.createParagraph();
            contentGraph.setAlignment(ParagraphAlignment.LEFT);
            
            XWPFRun paraContent = contentGraph.createRun();
            paraContent.setFontFamily("Times New Roman");
            paraContent.setFontSize(14);
            
            for(CauHoi cauHoi : tmpDeThi.getDSCauHoi()) {
                paraContent.setText("Câu " + String.valueOf(tmpDeThi.getDSCauHoi().indexOf(cauHoi) + 1) + " (" + cauHoi.getDiemDatDuoc() + " điểm)");
                paraContent.addBreak();
                paraContent.setText(cauHoi.getCauHoi());
                paraContent.addBreak();
                for(String dapAn : cauHoi.getDapAn()) {
                    paraContent.setText(dsDapAn[cauHoi.getDapAn().indexOf(dapAn)] + ". " + dapAn);
                    paraContent.addTab();
                    paraContent.addTab();
                }
                paraContent.addBreak();
                paraContent.addBreak();
            }
            
            File fout = new File("exportToFile/" + tenDeThi + ".docx");
            if(fout.exists()) {
                fos = new FileOutputStream(fout, false);
            }
            else {
                fout.getParentFile().mkdirs();
                fout.createNewFile();
                fos = new FileOutputStream(fout);
            }
            //out = new FileOutputStream(tmpDeThi.getTenDeThi() + ".docx");
            document.write(fos);
            fos.close();
            document.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(UITuTaoDeThi.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(UITuTaoDeThi.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jLBXuatFileMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UISinhDeTuDong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UISinhDeTuDong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UISinhDeTuDong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UISinhDeTuDong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UISinhDeTuDong().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton JRBCaTracNgiemVaTuLuan;
    private javax.swing.JButton btnLuuDeThi;
    private javax.swing.JButton btnXoaDeThi;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jCBDoKho;
    private javax.swing.JCheckBox jCBoxSoLuongCauMoiChuong;
    private javax.swing.JLabel jLBThayTheCauHoi;
    private javax.swing.JLabel jLBXemTruoc;
    private javax.swing.JLabel jLBXoaCauHoi;
    private javax.swing.JLabel jLBXuatFile;
    private javax.swing.JList<String> jLCauHoiTrongDe;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanelChonSoCau;
    private javax.swing.JRadioButton jRBChung;
    private javax.swing.JRadioButton jRBKyHe;
    private javax.swing.JRadioButton jRBKyI;
    private javax.swing.JRadioButton jRBKyII;
    private javax.swing.JRadioButton jRBRieng;
    private javax.swing.JRadioButton jRBTracNghiem;
    private javax.swing.JRadioButton jRBTuLuan;
    private javax.swing.JSpinner jSSoCau;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTAXemTruoc;
    private javax.swing.JTextField jTFNamHoc;
    private javax.swing.JTextField jTFThoiGian;
    // End of variables declaration//GEN-END:variables
}
